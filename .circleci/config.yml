version: 2
jobs:
   build:
     machine: true
     environment:
       - AWS_ACCOUNT: "307921801440"
       - ECR_ENDPOINT: "307921801440.dkr.ecr.eu-west-1.amazonaws.com"
       - ECR_REPO_NS: "cms"
       - TOMCAT_VER: "8.5.23"
       - INSPEC_VER: "1.41.0"
     steps:
       - checkout
       - run: |
            ## Prepare environment and build container
            # Update pip & awscli
            pip install --upgrade pip
            pip install --upgrade awscli

            # Download AWS ec2-metadata script
            curl -sS -o ./docker-build/files/ec2-metadata \
              http://s3.amazonaws.com/ec2metadata/ec2-metadata
            chmod 755 ./docker-build/files/ec2-metadata

            # Download Tomcat
            curl -sS -o ./docker-build/files/apache-tomcat-${TOMCAT_VER}.tar.gz \
              http://www-eu.apache.org/dist/tomcat/tomcat-8/v${TOMCAT_VER}/bin/apache-tomcat-${TOMCAT_VER}.tar.gz
            
            # Build Docker container
            docker build -t ${ECR_REPO_NS}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_BUILD_NUM} \
              ./docker-build

       - run: |
            ## Run tests
            # Install InSpec
            #curl -sS -o /tmp/inspec.deb \
            #  https://packages.chef.io/files/stable/inspec/${INSPEC_VER}/ubuntu/$(lsb_release -r -s)/inspec_${INSPEC_VER}-1_amd64.deb
            #sudo dpkg -i /tmp/inspec.deb && sudo apt-get install -f
            #dpkg -l inspec
            gem install inspec

            sudo docker images -a
            container_image=$(sudo docker images -q ${ECR_REPO_NS}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_BUILD_NUM})
            sudo docker run -d --name test_${CIRCLE_BUILD_NUM} $container_image /bin/sleep 9m 

            sudo docker ps -a
            
            inspec exec --backend=docker ~/project/tests/base_container.rb \
              -t docker://test_${CIRCLE_BUILD_NUM}

       - run: |
            ## Push container image to ECR
            # Login into ECR
            #$(aws --region eu-west-1 ecr get-login --no-include-email)

            # Tag container
            #docker tag ${ECR_REPO_NS}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_BUILD_NUM} \
            #  ${ECR_ENDPOINT}/${ECR_REPO_NS}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_BUILD_NUM}
            
            # Push container to ECR
            #docker push \
            #  ${ECR_ENDPOINT}/${ECR_REPO_NS}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_BUILD_NUM}

